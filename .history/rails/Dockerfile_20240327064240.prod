# Linux x86_64アーキテクチャ向けのRuby 3.1.2イメージをベースとして使用します。
FROM --platform=linux/x86_64 ruby:3.1.2

# 環境変数LANGをC.UTF-8に設定します（文字エンコーディング関連）。
ENV LANG C.UTF-8

# 環境変数TZをAsia/Tokyoに設定します（タイムゾーン関連）。
ENV TZ Asia/Tokyo

# 環境変数RAILS_ENVをproductionに設定します（Railsの動作環境）。
ENV RAILS_ENV=production

# myappディレクトリを作成します。
RUN mkdir /myapp

# 作業ディレクトリを/myappに設定します。
WORKDIR /myapp

# ホストのGemfileをコンテナの/myappディレクトリにコピーします。
COPY Gemfile /myapp/Gemfile

# ホストのGemfile.lockをコンテナの/myappディレクトリにコピーします。
COPY Gemfile.lock /myapp/Gemfile.lock

# Bundlerのバグ対応用：RubyGemsをアップデートします。
RUN gem update --system

# Bundlerのバグ対応用：Bundlerをアップデートします。
RUN bundle update --bundler

# Gemfileに記載された依存関係をインストールします。
RUN bundle install

# ホストのカレントディレクトリの内容をコンテナの/myappディレクトリにコピーします。
COPY . /myapp

# tmp/socketsディレクトリをコンテナ内に作成します。
RUN mkdir -p tmp/sockets

# tmp/pidsディレクトリをコンテナ内に作成します。
RUN mkdir -p tmp/pids

# /myapp/publicディレクトリをボリュームとしてマウントします。
VOLUME /myapp/public

# /myapp/tmpディレクトリをボリュームとしてマウントします。
VOLUME /myapp/tmp

# コンテナが起動するたびに実行されるスクリプトをコピーし、実行可能にします。
COPY entrypoint.prod.sh /usr/bin/
RUN chmod +x /usr/bin/entrypoint.prod.sh

# entrypoint.prod.shスクリプトをエントリーポイントとして設定します。
ENTRYPOINT ["entrypoint.prod.sh"]

# コンテナがリッスンするポート番号を3000に設定します。
EXPOSE 3000
